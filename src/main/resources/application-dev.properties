server.port=8082
server.context-path=/

springTest4.name=cmazxiaoma

#想在JPA定义关联关系，又不想在数据库表里面建立外键关系。
spring.jpa.hibernate.ddl-auto=none

spring.jpa.show-sql=true

#将jpa的session绑定到整个线程的Servlet过滤器，处理请求
spring.jpa.open-in-view=true
#启动懒加载
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext

#mybatis配置
mybatis.type-aliases-package=com.cmazxiaoma.mybatis
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=3000
mybatis.mapper-locations=classpath*:com/cmazxiaoma/mybatis/*Mapper.xml

mybatis.configuration.lazy-loading-enabled=true
mybatis.configuration.aggressive-lazy-loading=false
#默认情况下延迟加载的触发方法为equals,clone,hashCode,toString
#我们打印对象的属性时候，会调用toString()方法，破坏延迟加载的策略。
#这时候mybatis.configuration.lazy-load-trigger-methods保留空就行了
mybatis.configuration.lazy-load-trigger-methods=

#开启mybatis二级缓存，但是还是要在具体的mapper.xml进行配置
mybatis.configuration.cache-enabled=true

#Redis
spring.redis.database=0
spring.redis.host=111.230.11.184
spring.redis.password=xiaoma
spring.redis.port=6379
#reids超时连接时间
spring.redis.timeout=100000
#连接池最大连接数
spring.redis.pool.max-active=10000
#连接池最大空闲数
spring.redis.pool.max-idle=1000
#连接池最大等待时间
spring.redis.pool.max-wait=10000
spring.redis.sentinel.master=mymaster
spring.redis.sentinel.nodes=111.230.11.184:26380,111.230.11.184:26381
spring.redis.sentinel.timeout=100000
spring.redis.sentinel.password=xiaoma


spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.url=jdbc:mysql://111.230.11.184:3306/hibernate_demo?useSSL=false&useUnicode=true&characterEncoding=utf-8 
spring.datasource.druid.username=root
spring.datasource.druid.password=xiaoma
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver

#连接池的配置信息
#初始化连接
spring.datasource.druid.initial-size=100
#最小空闲连接，连接池容许保持空闲状态的最小连接，低于这个数量将创建新的连接，如果为0则不创建
spring.datasource.druid.min-idle=100
#最大活动连接，连接池在同一时间能够分配的最大活动连接的数量
spring.datasource.druid.max-active=1000
#最大等待时间，当没有可用连接时，超过时间则抛出异常
spring.datasource.druid.max-wait=60000
#在空闲连接回收器线程运行期间休眠的时间值
spring.datasource.druid.time-between-eviction-runs-millis=60000
#连接在池中保持空闲而不被空闲连接回收器线程回收的最小时间值
spring.datasource.druid.min-evictable-idle-time-millis=300000
#SQL查询，用来验证从连接池取出的连接，在连接返回调用者之前，如果指定，则查询必须是一个SQL SELECT并且必须返回至少一行记录
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
#指明连接是否被空闲连接回收期进行检验，如果检验失败，则连接将被池中去除
#设置为true后如果要生效， validation-query参数必须要设置非空字符串
spring.datasource.druid.test-while-idle=true
#指明是否在池中取出连接前进行验证，如果检验失败，则从池中去除连接并且取出另一个
#设置为true后如果要生效，validation-query参数必须要设置非空字符串
spring.datasource.druid.test-on-borrow=true
#指明是否归还到池中前进行检验
#设置为true后如果要生效，validation-query参数必须要设置非空字符串
spring.datasource.druid.test-on-return=false
#开启池中的prepared statement池功能
spring.datasource.druid.pool-prepared-statements=true
#prepared statement池能够同时分配的打开的statements的最大数量
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#配置监控统计拦截的filters
spring.datasource.druid.filters=stat,wall,log4j
#通过connection-properties属性来打开mergeSql功能，慢sql记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true
#是否自动回收超时连接
spring.datasource.druid.remove-abandoned=true
#泄漏的连接可以被删除的超时值，单位为毫秒
spring.datasource.druid.remove-abandoned-timeout-millis=180000
#回收超时连接是否要打印stack traces日志
spring.datasource.druid.log-abandoned=true

